// Code generated by go generate; DO NOT EDIT
// This file is generated by go genrated at 2021-07-20 13:48:08.384238299 +0800 CST m=+0.003190552

package entity 

import "github.com/milvus-io/milvus-sdk-go/v2/internal/proto/schema"


// ColumnBinaryVector generated columns type for BinaryVector
type ColumnBinaryVector struct {
	name   string
	dim    int
	values [][]byte
}

// Name returns column name
func (c *ColumnBinaryVector) Name() string {
	return c.name
}

// Type returns column FieldType
func (c *ColumnBinaryVector) Type() FieldType {
	return FieldTypeBinaryVector
}

// Len returns column data length
func (c * ColumnBinaryVector) Len() int {
	return len(c.values)
}

// Dim returns vector dimension
func (c *ColumnBinaryVector) Dim() int {
	return c.dim
}

// Data returns column data
func (c *ColumnBinaryVector) Data() [][]byte {
	return c.values
}

// FieldData return column data mapped to schema.FieldData
func (c *ColumnBinaryVector) FieldData() *schema.FieldData {
	fd := &schema.FieldData{
		Type: schema.DataType_BinaryVector,
		FieldName: c.name,
	}

	data := make([]byte, 0, len(c.values)* c.dim)

	for _, vector := range c.values {
		data = append(data, vector...)
	}

	fd.Field = &schema.FieldData_Vectors{
		Vectors: &schema.VectorField{
			Dim: int64(c.dim),
			
			Data: &schema.VectorField_BinaryVector{
				BinaryVector: data,
			},
			
		},
	}
	return fd
}

// NewColumnBinaryVector auto generated constructor
func NewColumnBinaryVector(name string, dim int, values [][]byte) *ColumnBinaryVector {
	return &ColumnBinaryVector {
		name:   name,
		dim:    dim,
		values: values,
	}
}
