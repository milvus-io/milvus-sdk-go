// Code generated by protoc-gen-go. DO NOT EDIT.
// source: status.proto

package milvus_grpc

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ErrorCode int32

const (
	ErrorCode_SUCCESS               ErrorCode = 0
	ErrorCode_UNEXPECTED_ERROR      ErrorCode = 1
	ErrorCode_CONNECT_FAILED        ErrorCode = 2
	ErrorCode_PERMISSION_DENIED     ErrorCode = 3
	ErrorCode_TABLE_NOT_EXISTS      ErrorCode = 4
	ErrorCode_ILLEGAL_ARGUMENT      ErrorCode = 5
	ErrorCode_ILLEGAL_RANGE         ErrorCode = 6
	ErrorCode_ILLEGAL_DIMENSION     ErrorCode = 7
	ErrorCode_ILLEGAL_INDEX_TYPE    ErrorCode = 8
	ErrorCode_ILLEGAL_TABLE_NAME    ErrorCode = 9
	ErrorCode_ILLEGAL_TOPK          ErrorCode = 10
	ErrorCode_ILLEGAL_ROWRECORD     ErrorCode = 11
	ErrorCode_ILLEGAL_VECTOR_ID     ErrorCode = 12
	ErrorCode_ILLEGAL_SEARCH_RESULT ErrorCode = 13
	ErrorCode_FILE_NOT_FOUND        ErrorCode = 14
	ErrorCode_META_FAILED           ErrorCode = 15
	ErrorCode_CACHE_FAILED          ErrorCode = 16
	ErrorCode_CANNOT_CREATE_FOLDER  ErrorCode = 17
	ErrorCode_CANNOT_CREATE_FILE    ErrorCode = 18
	ErrorCode_CANNOT_DELETE_FOLDER  ErrorCode = 19
	ErrorCode_CANNOT_DELETE_FILE    ErrorCode = 20
	ErrorCode_BUILD_INDEX_ERROR     ErrorCode = 21
	ErrorCode_ILLEGAL_NLIST         ErrorCode = 22
	ErrorCode_ILLEGAL_METRIC_TYPE   ErrorCode = 23
	ErrorCode_OUT_OF_MEMORY         ErrorCode = 24
)

var ErrorCode_name = map[int32]string{
	0:  "SUCCESS",
	1:  "UNEXPECTED_ERROR",
	2:  "CONNECT_FAILED",
	3:  "PERMISSION_DENIED",
	4:  "TABLE_NOT_EXISTS",
	5:  "ILLEGAL_ARGUMENT",
	6:  "ILLEGAL_RANGE",
	7:  "ILLEGAL_DIMENSION",
	8:  "ILLEGAL_INDEX_TYPE",
	9:  "ILLEGAL_TABLE_NAME",
	10: "ILLEGAL_TOPK",
	11: "ILLEGAL_ROWRECORD",
	12: "ILLEGAL_VECTOR_ID",
	13: "ILLEGAL_SEARCH_RESULT",
	14: "FILE_NOT_FOUND",
	15: "META_FAILED",
	16: "CACHE_FAILED",
	17: "CANNOT_CREATE_FOLDER",
	18: "CANNOT_CREATE_FILE",
	19: "CANNOT_DELETE_FOLDER",
	20: "CANNOT_DELETE_FILE",
	21: "BUILD_INDEX_ERROR",
	22: "ILLEGAL_NLIST",
	23: "ILLEGAL_METRIC_TYPE",
	24: "OUT_OF_MEMORY",
}

var ErrorCode_value = map[string]int32{
	"SUCCESS":               0,
	"UNEXPECTED_ERROR":      1,
	"CONNECT_FAILED":        2,
	"PERMISSION_DENIED":     3,
	"TABLE_NOT_EXISTS":      4,
	"ILLEGAL_ARGUMENT":      5,
	"ILLEGAL_RANGE":         6,
	"ILLEGAL_DIMENSION":     7,
	"ILLEGAL_INDEX_TYPE":    8,
	"ILLEGAL_TABLE_NAME":    9,
	"ILLEGAL_TOPK":          10,
	"ILLEGAL_ROWRECORD":     11,
	"ILLEGAL_VECTOR_ID":     12,
	"ILLEGAL_SEARCH_RESULT": 13,
	"FILE_NOT_FOUND":        14,
	"META_FAILED":           15,
	"CACHE_FAILED":          16,
	"CANNOT_CREATE_FOLDER":  17,
	"CANNOT_CREATE_FILE":    18,
	"CANNOT_DELETE_FOLDER":  19,
	"CANNOT_DELETE_FILE":    20,
	"BUILD_INDEX_ERROR":     21,
	"ILLEGAL_NLIST":         22,
	"ILLEGAL_METRIC_TYPE":   23,
	"OUT_OF_MEMORY":         24,
}

func (x ErrorCode) String() string {
	return proto.EnumName(ErrorCode_name, int32(x))
}

func (ErrorCode) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_dfe4fce6682daf5b, []int{0}
}

type Status struct {
	ErrorCode            ErrorCode `protobuf:"varint,1,opt,name=error_code,json=errorCode,proto3,enum=milvus.grpc.ErrorCode" json:"error_code,omitempty"`
	Reason               string    `protobuf:"bytes,2,opt,name=reason,proto3" json:"reason,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *Status) Reset()         { *m = Status{} }
func (m *Status) String() string { return proto.CompactTextString(m) }
func (*Status) ProtoMessage()    {}
func (*Status) Descriptor() ([]byte, []int) {
	return fileDescriptor_dfe4fce6682daf5b, []int{0}
}

func (m *Status) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Status.Unmarshal(m, b)
}
func (m *Status) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Status.Marshal(b, m, deterministic)
}
func (m *Status) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Status.Merge(m, src)
}
func (m *Status) XXX_Size() int {
	return xxx_messageInfo_Status.Size(m)
}
func (m *Status) XXX_DiscardUnknown() {
	xxx_messageInfo_Status.DiscardUnknown(m)
}

var xxx_messageInfo_Status proto.InternalMessageInfo

func (m *Status) GetErrorCode() ErrorCode {
	if m != nil {
		return m.ErrorCode
	}
	return ErrorCode_SUCCESS
}

func (m *Status) GetReason() string {
	if m != nil {
		return m.Reason
	}
	return ""
}

func init() {
	proto.RegisterEnum("milvus.grpc.ErrorCode", ErrorCode_name, ErrorCode_value)
	proto.RegisterType((*Status)(nil), "milvus.grpc.Status")
}

func init() { proto.RegisterFile("status.proto", fileDescriptor_dfe4fce6682daf5b) }

var fileDescriptor_dfe4fce6682daf5b = []byte{
	// 432 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x5c, 0x92, 0x41, 0x6f, 0x13, 0x3f,
	0x10, 0xc5, 0xff, 0xe9, 0xbf, 0xa4, 0xc4, 0x49, 0xd3, 0x89, 0x9b, 0xa4, 0xe1, 0x56, 0x71, 0xaa,
	0x38, 0xe4, 0x00, 0xe2, 0x03, 0xb8, 0xf6, 0x6c, 0x6a, 0xe1, 0xb5, 0xa3, 0xb1, 0x97, 0xa6, 0x27,
	0xab, 0xb4, 0x2b, 0x84, 0x04, 0x6c, 0xb5, 0x49, 0xf9, 0x52, 0x7c, 0x49, 0xe4, 0x36, 0x2e, 0x2b,
	0x6e, 0xbb, 0xbf, 0x37, 0xef, 0x8d, 0xe6, 0xed, 0xb2, 0xd1, 0x76, 0x77, 0xbb, 0x7b, 0xdc, 0x2e,
	0x1f, 0xda, 0x66, 0xd7, 0xf0, 0xe1, 0x8f, 0x6f, 0xdf, 0x7f, 0x3d, 0x6e, 0x97, 0x5f, 0xdb, 0x87,
	0xbb, 0xb7, 0xd7, 0xac, 0xef, 0x9f, 0x44, 0xfe, 0x91, 0xb1, 0xba, 0x6d, 0x9b, 0x36, 0xde, 0x35,
	0xf7, 0xf5, 0xa2, 0x77, 0xde, 0xbb, 0x18, 0xbf, 0x9f, 0x2f, 0x3b, 0xb3, 0x4b, 0x4c, 0xb2, 0x6c,
	0xee, 0x6b, 0x1a, 0xd4, 0xf9, 0x91, 0xcf, 0x59, 0xbf, 0xad, 0x6f, 0xb7, 0xcd, 0xcf, 0xc5, 0xc1,
	0x79, 0xef, 0x62, 0x40, 0xfb, 0xb7, 0x77, 0xbf, 0x0f, 0xd9, 0xe0, 0xc5, 0xc0, 0x87, 0xec, 0xc8,
	0x57, 0x52, 0xa2, 0xf7, 0xf0, 0x1f, 0x9f, 0x32, 0xa8, 0x2c, 0x6e, 0xd6, 0x28, 0x03, 0xaa, 0x88,
	0x44, 0x8e, 0xa0, 0xc7, 0x39, 0x1b, 0x4b, 0x67, 0x2d, 0xca, 0x10, 0x0b, 0xa1, 0x0d, 0x2a, 0x38,
	0xe0, 0x33, 0x36, 0x59, 0x23, 0x95, 0xda, 0x7b, 0xed, 0x6c, 0x54, 0x68, 0x35, 0x2a, 0xf8, 0x3f,
	0x05, 0x04, 0x71, 0x69, 0x30, 0x5a, 0x17, 0x22, 0x6e, 0xb4, 0x0f, 0x1e, 0x0e, 0x13, 0xd5, 0xc6,
	0xe0, 0x4a, 0x98, 0x28, 0x68, 0x55, 0x95, 0x68, 0x03, 0xbc, 0xe2, 0x13, 0x76, 0x9c, 0x29, 0x09,
	0xbb, 0x42, 0xe8, 0xa7, 0xd4, 0x8c, 0x94, 0x2e, 0xd1, 0xa6, 0x70, 0x38, 0xe2, 0x73, 0xc6, 0x33,
	0xd6, 0x56, 0xe1, 0x26, 0x86, 0x9b, 0x35, 0xc2, 0xeb, 0x2e, 0xdf, 0x6f, 0x15, 0x25, 0xc2, 0x80,
	0x03, 0x1b, 0xbd, 0x70, 0xb7, 0xfe, 0x04, 0xac, 0x1b, 0x4c, 0xee, 0x9a, 0x50, 0x3a, 0x52, 0x30,
	0xec, 0xe2, 0xcf, 0x28, 0x83, 0xa3, 0xa8, 0x15, 0x8c, 0xf8, 0x1b, 0x36, 0xcb, 0xd8, 0xa3, 0x20,
	0x79, 0x15, 0x09, 0x7d, 0x65, 0x02, 0x1c, 0xa7, 0x2e, 0x0a, 0xbd, 0xbf, 0xaf, 0x70, 0x95, 0x55,
	0x30, 0xe6, 0x27, 0x6c, 0x58, 0x62, 0x10, 0xb9, 0x9c, 0x93, 0xb4, 0x5f, 0x0a, 0x79, 0x85, 0x99,
	0x00, 0x5f, 0xb0, 0xa9, 0x14, 0x36, 0x99, 0x24, 0xa1, 0x08, 0x18, 0x0b, 0x67, 0x14, 0x12, 0x4c,
	0xd2, 0x0d, 0xff, 0x28, 0xda, 0x20, 0xf0, 0x8e, 0x43, 0xa1, 0xc1, 0xbf, 0x8e, 0xd3, 0x8e, 0x23,
	0x2b, 0xc9, 0x31, 0x4d, 0xc7, 0x5c, 0x56, 0xda, 0xa8, 0x7d, 0x47, 0xcf, 0x5f, 0x6f, 0xd6, 0xad,
	0xd9, 0x1a, 0xed, 0x03, 0xcc, 0xf9, 0x19, 0x3b, 0xcd, 0xa8, 0xc4, 0x40, 0x5a, 0x3e, 0x17, 0x7a,
	0x96, 0x66, 0x5d, 0x15, 0xa2, 0x2b, 0x62, 0x89, 0xa5, 0xa3, 0x1b, 0x58, 0x7c, 0xe9, 0x3f, 0xfd,
	0x9a, 0x1f, 0xfe, 0x04, 0x00, 0x00, 0xff, 0xff, 0x9a, 0x93, 0x5d, 0x19, 0xaa, 0x02, 0x00, 0x00,
}
